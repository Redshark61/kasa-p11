@use './variables' as var;
@use 'sass:math';

.flex {
	display: flex;
}

.flex-col {
	flex-direction: column;
}

.flex-row {
	flex-direction: row;
}

.flex-wrap {
	flex-wrap: wrap;
}

.flex-1 {
	flex: 1;
}

.absolute {
	position: absolute;
}

.bottom-0 {
	bottom: 0;
}

.absolute-center-x {
	position: absolute;
	left: 50%;
	transform: translateX(-50%);
}

.absolute-center-y {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
}

.absolute-center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.relative {
	position: relative;
}

.inset-0 {
	inset: 0;
}

.z-0 {
	z-index: 0;
}

.z-1 {
	z-index: 1;
}

.z-2 {
	z-index: 2;
}

.z--1 {
	z-index: -1;
}

.radius-0 {
	border-radius: 0;
}

.radius-10 {
	border-radius: 10px;
}

.radius-15 {
	border-radius: 15px;
}

.radius-25 {
	border-radius: max(10px, 1.7vw);
}

.radius-full {
	border-radius: 9999px;
}

@each $position, $value in var.$justify-positions {
	.justify-#{$position} {
		justify-content: $value;
	}
}

@each $position, $value in var.$items-positions {
	.items-#{$position} {
		align-items: $value;
	}
}

@each $position, $value in var.$background-position-y {
	.bg-pos-y-#{$position} {
		background-position-y: $value;
	}

	.bg-pos-#{$position} {
		background-position: $value;
	}
}

@each $position, $value in var.$background-position-x {
	.bg-pos-x-#{$position} {
		background-position-x: $value;
	}
}

@each $size, $value in var.$background-size {
	.bg-size-#{$size} {
		background-size: $value;
	}
}

@for $i from 0 through 100 {
	.gap-#{$i} {
		gap: #{math.round(($i / 1440 * 1000)) / 10}vw;
	}

	$i: $i + 10;
}